/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-npm-ping",
factory: function (require) {
"use strict";var plugin=(()=>{var f=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var R=Object.getOwnPropertyNames;var N=Object.prototype.hasOwnProperty;var p=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(e,i)=>(typeof require<"u"?require:e)[i]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var S=(t,e)=>{for(var i in e)f(t,i,{get:e[i],enumerable:!0})},j=(t,e,i,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of R(e))!N.call(t,o)&&o!==i&&f(t,o,{get:()=>e[o],enumerable:!(a=w(e,o))||a.enumerable});return t};var D=t=>j(f({},"__esModule",{value:!0}),t);var O={};S(O,{default:()=>C});var s=p("clipanion"),d=p("@yarnpkg/cli"),n=p("@yarnpkg/core"),h=p("@yarnpkg/plugin-npm");var u=p("@yarnpkg/plugin-npm");async function y({scope:t,configuration:e}){return t?u.npmConfigUtils.getScopeRegistry(t,{configuration:e}):u.npmConfigUtils.getDefaultRegistry({configuration:e})}var r=class extends d.BaseCommand{constructor(){super(...arguments);this.json=s.Option.Boolean("--json",!1,{description:"Format the output as an NDJSON stream"});this.registry=s.Option.String("--registry",{description:"override the registry configuration"});this.scope=s.Option.String("--scope",{description:"Specific registry to ping"})}async execute(){let i=await n.Configuration.find(this.context.cwd,this.context.plugins),a=await y({scope:this.scope,configuration:i});return(await n.StreamReport.start({configuration:i,json:this.json,stdout:this.context.stdout},async g=>{let x,m,l=this.registry?this.registry:a;try{let c=Date.now();g.reportInfo(null,`ping ${l}`),x=await h.npmHttpUtils.get("/-/ping?write=true",{configuration:i,registry:l,jsonResponse:!0}),m=Date.now()-c}catch(c){throw c}g.reportInfoOnce,g.reportInfo(n.MessageName.UNNAMED,`PONG ${m} ms`)})).exitCode()}};r.paths=[["npm","ping"]],r.usage=s.Command.Usage({description:"Verify if the registry is online",details:"TBA",examples:[["Triggers a ping to the default public registry","yarn npm ping"],["Triggers a ping to the default public registry","yarn npm ping --scope "]]});var b={commands:[r]},C=b;return D(O);})();
return plugin;
}
};
